# Generated by Django 5.2.7 on 2025-10-21 07:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('campus', '0001_initial'),
        ('classes', '0004_alter_grade_unique_together_alter_grade_campus_and_more'),
        ('students', '0005_alter_student_campus_alter_student_class_teacher_and_more'),
        ('teachers', '0007_alter_teacher_options_alter_teacher_assigned_class_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OverallAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True, unique=True)),
                ('total_campuses', models.PositiveIntegerField(default=0)),
                ('total_grades', models.PositiveIntegerField(default=0)),
                ('total_classes', models.PositiveIntegerField(default=0)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('total_teachers', models.PositiveIntegerField(default=0)),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('active_users_today', models.PositiveIntegerField(default=0)),
                ('total_levels', models.PositiveIntegerField(default=0)),
                ('total_groups', models.PositiveIntegerField(default=0)),
                ('levels_completed_today', models.PositiveIntegerField(default=0)),
                ('total_levels_completed', models.PositiveIntegerField(default=0)),
                ('average_completion_rate', models.FloatField(default=0.0)),
                ('average_xp_per_student', models.FloatField(default=0.0)),
                ('average_streak', models.FloatField(default=0.0)),
                ('total_xp_earned', models.PositiveIntegerField(default=0)),
                ('students_with_streak', models.PositiveIntegerField(default=0)),
                ('students_active_this_week', models.PositiveIntegerField(default=0)),
                ('students_active_this_month', models.PositiveIntegerField(default=0)),
                ('top_student_xp', models.PositiveIntegerField(default=0)),
                ('top_student_streak', models.PositiveIntegerField(default=0)),
                ('top_class_completion', models.FloatField(default=0.0)),
                ('system_uptime_percentage', models.FloatField(default=100.0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Overall Analytics',
                'verbose_name_plural': 'Overall Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceTrend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('trend_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('date', models.DateField()),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('levels_completed', models.PositiveIntegerField(default=0)),
                ('total_xp_earned', models.PositiveIntegerField(default=0)),
                ('average_completion_rate', models.FloatField(default=0.0)),
                ('average_xp_per_user', models.FloatField(default=0.0)),
                ('average_streak', models.FloatField(default=0.0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('returning_users', models.PositiveIntegerField(default=0)),
                ('churn_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Performance Trend',
                'verbose_name_plural': 'Performance Trends',
                'ordering': ['-date'],
                'unique_together': {('trend_type', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CampusAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('total_teachers', models.PositiveIntegerField(default=0)),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('total_classes', models.PositiveIntegerField(default=0)),
                ('average_class_completion', models.FloatField(default=0.0)),
                ('total_xp_earned', models.PositiveIntegerField(default=0)),
                ('levels_completed_today', models.PositiveIntegerField(default=0)),
                ('active_students_today', models.PositiveIntegerField(default=0)),
                ('active_students_this_week', models.PositiveIntegerField(default=0)),
                ('students_with_streak', models.PositiveIntegerField(default=0)),
                ('top_student_name', models.CharField(blank=True, max_length=100)),
                ('top_student_xp', models.PositiveIntegerField(default=0)),
                ('top_class_name', models.CharField(blank=True, max_length=100)),
                ('top_class_completion', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='campus.campus')),
            ],
            options={
                'verbose_name': 'Campus Analytics',
                'verbose_name_plural': 'Campus Analytics',
                'ordering': ['-date'],
                'unique_together': {('campus', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ClassAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('active_students_today', models.PositiveIntegerField(default=0)),
                ('active_students_this_week', models.PositiveIntegerField(default=0)),
                ('total_levels_completed', models.PositiveIntegerField(default=0)),
                ('average_completion_rate', models.FloatField(default=0.0)),
                ('total_xp_earned', models.PositiveIntegerField(default=0)),
                ('average_xp_per_student', models.FloatField(default=0.0)),
                ('students_with_streak', models.PositiveIntegerField(default=0)),
                ('average_streak', models.FloatField(default=0.0)),
                ('top_student_name', models.CharField(blank=True, max_length=100)),
                ('top_student_xp', models.PositiveIntegerField(default=0)),
                ('struggling_students', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='classes.classroom')),
            ],
            options={
                'verbose_name': 'Class Analytics',
                'verbose_name_plural': 'Class Analytics',
                'ordering': ['-date'],
                'unique_together': {('classroom', 'date')},
            },
        ),
        migrations.CreateModel(
            name='StudentAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('levels_completed', models.PositiveIntegerField(default=0)),
                ('total_xp_earned', models.PositiveIntegerField(default=0)),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('total_time_spent', models.PositiveIntegerField(default=0)),
                ('questions_answered', models.PositiveIntegerField(default=0)),
                ('correct_answers', models.PositiveIntegerField(default=0)),
                ('days_active_this_week', models.PositiveIntegerField(default=0)),
                ('days_active_this_month', models.PositiveIntegerField(default=0)),
                ('last_activity_date', models.DateField(blank=True, null=True)),
                ('class_rank', models.PositiveIntegerField(default=0)),
                ('campus_rank', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='students.student')),
            ],
            options={
                'verbose_name': 'Student Analytics',
                'verbose_name_plural': 'Student Analytics',
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TeacherAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('students_completed_levels', models.PositiveIntegerField(default=0)),
                ('total_levels_completed', models.PositiveIntegerField(default=0)),
                ('average_completion_rate', models.FloatField(default=0.0)),
                ('average_xp_per_student', models.FloatField(default=0.0)),
                ('active_students_today', models.PositiveIntegerField(default=0)),
                ('students_with_streak', models.PositiveIntegerField(default=0)),
                ('average_streak', models.FloatField(default=0.0)),
                ('top_student_name', models.CharField(blank=True, max_length=100)),
                ('top_student_xp', models.PositiveIntegerField(default=0)),
                ('struggling_students', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='classes.classroom')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='teachers.teacher')),
            ],
            options={
                'verbose_name': 'Teacher Analytics',
                'verbose_name_plural': 'Teacher Analytics',
                'ordering': ['-date'],
                'unique_together': {('teacher', 'date')},
            },
        ),
    ]
