# Generated by Django 5.2.7 on 2025-10-17 07:37

from django.db import migrations, models
import django.db.models.deletion


def populate_campus_for_grades(apps, schema_editor):
    """Populate campus field for existing grades"""
    Grade = apps.get_model('classes', 'Grade')
    Campus = apps.get_model('campus', 'Campus')
    Level = apps.get_model('classes', 'Level')
    
    # Get the first campus as default
    default_campus = Campus.objects.first()
    if not default_campus:
        # Create a default campus if none exists
        default_campus = Campus.objects.create(
            campus_name="Default Campus",
            campus_code="C01",
            address_full="Default Address",
            postal_code="00000",
            city="Default City",
            primary_phone="000-000-0000",
            official_email="admin@example.com",
            campus_head_name="Default Head",
            instruction_language="English",
            academic_year_start="2025-01-01",
            academic_year_end="2025-12-31"
        )
    
    # Update existing grades with campus from their level
    for grade in Grade.objects.all():
        if hasattr(grade, 'level_id') and grade.level_id:
            try:
                level = Level.objects.get(id=grade.level_id)
                if level and level.campus:
                    grade.campus = level.campus
                else:
                    grade.campus = default_campus
            except Level.DoesNotExist:
                grade.campus = default_campus
        else:
            grade.campus = default_campus
        grade.save()


def reverse_populate_campus_for_grades(apps, schema_editor):
    """Reverse operation - no need to do anything"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('classes', '0002_initial'),
        ('campus', '0001_initial'),
    ]

    operations = [
        # Add campus field to Grade
        migrations.AddField(
            model_name='grade',
            name='campus',
            field=models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.CASCADE, to='campus.campus'),
        ),
        
        # Populate the campus field
        migrations.RunPython(
            populate_campus_for_grades,
            reverse_populate_campus_for_grades,
        ),
        
        # Make campus field non-nullable
        migrations.AlterField(
            model_name='grade',
            name='campus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus.campus'),
        ),
    ]
