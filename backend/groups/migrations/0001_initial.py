# Generated by Django 5.2.7 on 2025-10-14 07:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('group_number', models.IntegerField(unique=True)),
                ('level_count', models.IntegerField(default=50)),
                ('is_unlocked', models.BooleanField(default=False)),
                ('unlock_condition', models.CharField(choices=[('complete_previous', 'Complete Previous Group'), ('test_100_percent', 'Pass Test with 100%'), ('both', 'Both Conditions')], default='complete_previous', max_length=20)),
                ('test_questions', models.IntegerField(default=10)),
                ('pass_percentage', models.IntegerField(default=100)),
                ('plant_type', models.CharField(default='seed', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['group_number'],
            },
        ),
        migrations.CreateModel(
            name='GroupJumpTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('pass_percentage', models.IntegerField(default=100)),
                ('time_limit_minutes', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['target_group'],
            },
        ),
        migrations.CreateModel(
            name='GroupJumpTestAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('total_questions', models.IntegerField(default=0)),
                ('percentage', models.FloatField(default=0.0)),
                ('passed', models.BooleanField(default=False)),
                ('time_taken_seconds', models.IntegerField(default=0)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('answers', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-attempted_at'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('level_number', models.IntegerField(default=1)),
                ('questions_count', models.IntegerField(default=6)),
                ('xp_reward', models.IntegerField(default=10)),
                ('is_unlocked', models.BooleanField(default=True)),
                ('plant_growth_stage', models.CharField(default='seed', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['group', 'level_number'],
            },
        ),
        migrations.CreateModel(
            name='PlantGrowthStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_name', models.CharField(max_length=50)),
                ('stage_order', models.IntegerField(default=1)),
                ('level_range_start', models.IntegerField(default=1)),
                ('level_range_end', models.IntegerField(default=10)),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True)),
                ('xp_required', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['group', 'stage_order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice Question'), ('text_to_speech', 'Text to Speech (Pronunciation)'), ('fill_blank', 'Fill in the Blank'), ('synonyms', 'Synonyms'), ('antonyms', 'Antonyms'), ('sentence_completion', 'Sentence Completion')], max_length=30)),
                ('options', models.JSONField(blank=True, null=True)),
                ('correct_answer', models.JSONField(blank=True, null=True)),
                ('audio_url', models.URLField(blank=True, max_length=500, null=True)),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('hint', models.TextField(blank=True)),
                ('explanation', models.TextField(blank=True)),
                ('difficulty', models.IntegerField(default=1)),
                ('xp_value', models.IntegerField(default=2)),
                ('question_order', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['level', 'question_order'],
            },
        ),
        migrations.CreateModel(
            name='UserPlantProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stage', models.CharField(default='seed', max_length=50)),
                ('current_level', models.IntegerField(default=1)),
                ('total_xp', models.IntegerField(default=0)),
                ('is_wilting', models.BooleanField(default=False)),
                ('last_level_completed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
