# Generated by Django 5.2.7 on 2025-10-14 07:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DailyProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('levels_completed', models.IntegerField(default=0)),
                ('questions_answered', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('xp_earned', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('streak_maintained', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Daily Progress',
            },
        ),
        migrations.CreateModel(
            name='GroupProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('total_xp_earned', models.IntegerField(default=0)),
                ('levels_completed', models.IntegerField(default=0)),
                ('total_levels', models.IntegerField(default=50)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('daily_streak', models.IntegerField(default=0)),
                ('last_daily_level', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Group Progress',
            },
        ),
        migrations.CreateModel(
            name='LevelProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('questions_answered', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('wrong_answers', models.IntegerField(default=0)),
                ('xp_earned', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_attempted', models.DateTimeField(auto_now=True)),
                ('daily_level_completed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Level Progress',
            },
        ),
        migrations.CreateModel(
            name='QuestionProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_answered', models.BooleanField(default=False)),
                ('is_correct', models.BooleanField(default=False)),
                ('user_answer', models.JSONField(blank=True, null=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('xp_earned', models.IntegerField(default=0)),
                ('answered_at', models.DateTimeField(auto_now=True)),
                ('first_attempted', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Question Progress',
            },
        ),
    ]
