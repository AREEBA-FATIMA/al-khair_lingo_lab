# Generated by Django 5.2.7 on 2025-10-21 10:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('levels', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('levels_completed', models.IntegerField(default=0)),
                ('questions_answered', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('xp_earned', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('streak_maintained', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Daily Progress',
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='LevelProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('questions_answered', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('wrong_answers', models.IntegerField(default=0)),
                ('xp_earned', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_attempted', models.DateTimeField(auto_now=True)),
                ('daily_level_completed', models.BooleanField(default=False)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='levels.level')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Level Progress',
                'unique_together': {('user', 'level')},
            },
        ),
        migrations.CreateModel(
            name='QuestionProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_answered', models.BooleanField(default=False)),
                ('is_correct', models.BooleanField(default=False)),
                ('user_answer', models.JSONField(blank=True, null=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('xp_earned', models.IntegerField(default=0)),
                ('answered_at', models.DateTimeField(auto_now=True)),
                ('first_attempted', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='levels.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Question Progress',
                'unique_together': {('user', 'question')},
            },
        ),
    ]
