# Generated by Django 5.2.7 on 2025-10-17 15:00

from django.db import migrations, models
from django.utils import timezone


def populate_defaults(apps, schema_editor):
    """Populate default values for existing records"""
    Student = apps.get_model('students', 'Student')
    
    # Update existing students with default values
    for student in Student.objects.all():
        if not student.father_name:
            student.father_name = "Unknown"
        if not student.grade:
            student.grade = "1"
        if not student.section:
            student.section = "A"
        if not student.student_id or student.student_id == "TEMP-ID":
            # Generate a proper student ID
            try:
                campus_code = f"C{student.campus.id:02d}" if student.campus else "C01"
                shift_code = "M"
                grade_code = student.grade.replace('grade', '').replace('kg', 'KG').upper()
                if grade_code == 'NURSERY': 
                    grade_code = 'NUR'
                elif grade_code == 'KG-1': 
                    grade_code = 'KG1'
                elif grade_code == 'KG-2': 
                    grade_code = 'KG2'
                elif grade_code.isdigit(): 
                    grade_code = f"G{grade_code.zfill(2)}"
                section_code = student.section
                
                from django.db.models import Max
                last_student = Student.objects.filter(
                    campus=student.campus, 
                    grade=student.grade, 
                    section=student.section
                ).exclude(student_id__isnull=True).exclude(student_id="TEMP-ID").aggregate(
                    max_id=Max('student_id')
                )['max_id']
                
                last_serial = int(last_student.split('-')[-1]) if last_student and '-' in last_student else 0
                next_serial = last_serial + 1
                student.student_id = f"{campus_code}-{shift_code}-{grade_code}-{section_code}-{next_serial:04d}"
            except Exception as e:
                student.student_id = f"C01-M-{student.pk or 0:04d}"
        
        student.save()


def reverse_populate_defaults(apps, schema_editor):
    """Reverse migration - no need to do anything"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('students', '0003_remove_old_fields'),
    ]

    operations = [
        # First, make fields nullable temporarily
        migrations.AlterField(
            model_name='student',
            name='father_name',
            field=models.CharField(max_length=200, null=True, blank=True, help_text="Father's name"),
        ),
        migrations.AlterField(
            model_name='student',
            name='grade',
            field=models.CharField(max_length=10, null=True, blank=True, help_text="Student's grade"),
        ),
        migrations.AlterField(
            model_name='student',
            name='section',
            field=models.CharField(max_length=1, null=True, blank=True, help_text="Student's section"),
        ),
        migrations.AlterField(
            model_name='student',
            name='student_id',
            field=models.CharField(max_length=20, null=True, blank=True, unique=True, editable=False, help_text="Auto-generated student ID (C01-M-grade-section-serial)"),
        ),
        
        # Populate default values
        migrations.RunPython(
            populate_defaults,
            reverse_populate_defaults,
        ),
        
        # Now make fields non-nullable with defaults
        migrations.AlterField(
            model_name='student',
            name='father_name',
            field=models.CharField(max_length=200, default="Unknown", help_text="Father's name"),
        ),
        migrations.AlterField(
            model_name='student',
            name='grade',
            field=models.CharField(max_length=10, default='1', help_text="Student's grade"),
        ),
        migrations.AlterField(
            model_name='student',
            name='section',
            field=models.CharField(max_length=1, default='A', help_text="Student's section"),
        ),
        migrations.AlterField(
            model_name='student',
            name='student_id',
            field=models.CharField(max_length=20, unique=True, editable=False, default="TEMP-ID", help_text="Auto-generated student ID (C01-M-grade-section-serial)"),
        ),
    ]